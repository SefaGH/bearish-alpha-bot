name: Bearish Alpha Bot

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"   # her saat başı

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # config.yaml yoksa example'dan kopyala
      - name: Prepare config.yaml (fallback to example)
        run: |
          mkdir -p config
          if [ ! -f config/config.yaml ]; then
            if [ -f config/config.example.yaml ]; then
              cp config/config.example.yaml config/config.yaml
              echo "[prepare] Using config/config.example.yaml as config/config.yaml"
            else
              echo "::error::Neither config/config.yaml nor config/config.example.yaml found."
              exit 1
            fi
          fi

      - name: Run bot
        env:
          # Telegram (kodun beklediği adlar)
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}

          # Hangi borsalar aktif? (ör: bingx,bitget,kucoinfutures)
          EXCHANGES:          ${{ secrets.EXCHANGES }}

          # BINGX
          BINGX_API_KEY:      ${{ secrets.BINGX_API_KEY }}
          BINGX_SECRET_KEY:   ${{ secrets.BINGX_SECRET_KEY }}

          # BITGET (Passphrase = PASSWORD)
          BITGET_API_KEY:     ${{ secrets.BITGET_API_KEY }}
          BITGET_SECRET_KEY:  ${{ secrets.BITGET_SECRET_KEY }}
          BITGET_PASSWORD:    ${{ secrets.BITGET_PASSWORD }}

          # KUCOIN FUTURES (Passphrase = PASSWORD)
          KUCOIN_API_KEY:     ${{ secrets.KUCOIN_API_KEY }}
          KUCOIN_SECRET_KEY:  ${{ secrets.KUCOIN_SECRET_KEY }}
          KUCOIN_PASSWORD:    ${{ secrets.KUCOIN_PASSWORD }}

          # (opsiyonel) BINANCE
          BINANCE_API_KEY:    ${{ secrets.BINANCE_API_KEY }}
          BINANCE_SECRET_KEY: ${{ secrets.BINANCE_SECRET_KEY }}

          # (opsiyonel) AscendEX şimdilik kapalı
          # ASCENDEX_API_KEY:   ${{ secrets.ASCENDEX_API_KEY }}
          # ASCENDEX_SECRET_KEY:${{ secrets.ASCENDEX_SECRET_KEY }}

          # Semboller otomatik; istersen EXECUTION_EXCHANGE ile tek borsaya bildirim
          # SYM_SOURCE: AUTO
          # EXECUTION_EXCHANGE: bitget
        run: |
          python -u src/main.py

      # signals.csv ilk koşuda yoksa upload adımı fail etmesin
      - name: Ensure signals.csv exists
        run: |
          mkdir -p data
          [ -f data/signals.csv ] || echo "ts,exchange,symbol,side,entry,tp,sl,trail,qty,is_contract,contractSize,notional,risk_usd,reason" > data/signals.csv

      - name: Upload bot artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bot-data
          path: |
            data/signals.csv
            state.json
            day_stats.json
