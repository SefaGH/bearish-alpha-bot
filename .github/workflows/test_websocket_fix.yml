name: Test WebSocket Fix

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install fixed deps
        run: |
          pip install --upgrade pip
          # Quotes ile version specifier'ları koru
          pip install --no-cache-dir "aiohttp==3.8.6" "yarl<2.0" "multidict<7.0"
          pip install --no-cache-dir -r requirements.txt
      
      - name: Check versions
        run: |
          python -c "import aiohttp; print(f'aiohttp: {aiohttp.__version__}')"
          python -c "import yarl; print(f'yarl: {yarl.__version__}')"
          python -c "import multidict; print(f'multidict: {multidict.__version__}')"
      
      - name: Test WebSocket Connection
        env:
          EXCHANGES: bingx
          BINGX_KEY: ${{ secrets.BINGX_KEY }}
          BINGX_SECRET: ${{ secrets.BINGX_SECRET }}
        run: |
          # Simple WebSocket test
          python -c "
import asyncio
import ccxt.pro as ccxtpro

async def test():
    exchange = ccxtpro.bingx({'enableRateLimit': True})
    try:
        print('Testing WebSocket...')
        ohlcv = await exchange.watch_ohlcv('BTC/USDT:USDT', '1m')
        print(f'✅ WebSocket working! Got {len(ohlcv)} candles')
        print('✅ parse_frame error FIXED!')
        await exchange.close()
        return True
    except AttributeError as e:
        if 'parse_frame' in str(e):
            print(f'❌ parse_frame error still exists: {e}')
        else:
            print(f'❌ Other AttributeError: {e}')
        await exchange.close()
        return False
    except Exception as e:
        print(f'❌ Error: {e}')
        await exchange.close()
        return False

success = asyncio.run(test())
exit(0 if success else 1)
          "
