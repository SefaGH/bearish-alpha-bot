name: Repo Maintenance (auto-patch)

on:
  workflow_dispatch:
    inputs:
      task:
        description: "Which patch to apply"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - standardize-secrets
          - docker-python-312
          - fix-backtest-imports
          - set-exchange-kucoinfutures
      commit_message:
        description: "Optional commit message"
        required: false
        default: "chore: repo maintenance auto-patch"

permissions:
  contents: read

jobs:
  patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (no token persisted)
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Run maintenance script
        run: |
          python -u scripts/maintenance.py --task "${{ github.event.inputs.task }}"

      - name: Commit and push with PAT
        if: always()
        env:
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          COMMIT_MESSAGE: ${{ github.event.inputs.commit_message }}
          BOT_PAT: ${{ secrets.BOT_PAT }}
          REPO: ${{ github.repository }}
          REF_NAME: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          git config --global user.name  "${GIT_COMMITTER_NAME}"
          git config --global user.email "${GIT_COMMITTER_EMAIL}"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          if git diff --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git add -A
          git commit -m "${COMMIT_MESSAGE}"

          if [ -z "${BOT_PAT}" ]; then
            echo "::error::BOT_PAT secret missing. Create a fine-grained PAT with Contents:RW and Actions:RW."
            exit 1
          fi

          # Set remote with PAT and push to current branch (fallback main)
          git remote set-url origin "https://x-access-token:${BOT_PAT}@github.com/${REPO}.git"
          BRANCH="${REF_NAME:-main}"
          git push origin "HEAD:${BRANCH}"
